name: Release Orkestra Plugin

on:
  push:
    tags:
      - "v*"

env:
# TODO: Remplacez "template" par le nom de votre plugin (ex: "discord", "aws", "fs")
  PLUGIN_NAME: "template"

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
          cache: true

      - name: Vet
        run: go vet ./...

      - name: Test
        run: go test -v ./...

  build:
    name: Build Plugin for ${{ matrix.goos }}/${{ matrix.goarch }}
    needs: lint-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: windows
            goarch: amd64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.5'
      
      - name: Install protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate gRPC code
        run: make generate

      - name: Set output file and archive names
        id: set_names
        shell: bash
        run: |
          EXECUTABLE_BASE="orkestra-plugin-${{ env.PLUGIN_NAME }}"
          EXECUTABLE_NAME="${EXECUTABLE_BASE}"
          if [ "${{ matrix.goos }}" == "windows" ]; then
            EXECUTABLE_NAME="${EXECUTABLE_BASE}.exe"
          fi

          ARCHIVE_NAME="${EXECUTABLE_BASE}_${{ matrix.goos }}_${{ matrix.goarch }}.zip"
          echo "EXECUTABLE_NAME=${EXECUTABLE_NAME}" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${ARCHIVE_NAME}" >> $GITHUB_ENV
      
      - name: Build plugin
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: go build -ldflags="-s -w" -o ${{ env.EXECUTABLE_NAME }} .

      - name: Archive plugin
        run: zip ${{ env.ARCHIVE_NAME }} ${{ env.EXECUTABLE_NAME }}

      - name: Generate checksum
        run: sha256sum ${{ env.ARCHIVE_NAME }} > ${{ env.ARCHIVE_NAME }}.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plugin-archive-${{ matrix.goos }}-${{ matrix.goarch }}
          path: |
            ${{ env.ARCHIVE_NAME }}
            ${{ env.ARCHIVE_NAME }}.sha256

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: archives

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: archives/*/*

